services:

  api-gateway:
    build:
      context: ./server/ApiGateway
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - user-service
    #   - movie-service
    #   - booking-service

  user-service:
    build:
      context: .
      dockerfile: server/Microservices/UserService/UserService.API/Dockerfile
    ports:
      - "5001:5000"
    depends_on:
      - postgres
      - redis
      - rabbitmq

#   movie-service:
#     build:
#       context: ./server
#       dockerfile: Microservices/MovieService/MovieService.API/Dockerfile
#     ports:
#       - "5002:5000"
#     depends_on:
#       - postgres
#       - redis
#       - rabbitmq

#   booking-service:
#     build:
#       context: ./server
#       dockerfile: Microservices/BookingService/BookingService.API/Dockerfile
#     ports:
#       - "5003:5000"
#     depends_on:
#       - postgres
#       - redis
#       - rabbitmq

  rabbitmq:
    container_name: RabbitMQ
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    environment:
      REDIS_PASSWORD: 1
    ports:
      - 6379:6379

volumes:
  postgres-data: